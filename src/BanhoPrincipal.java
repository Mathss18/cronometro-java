
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javafx.scene.layout.AnchorPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author gilberto
 */


public class BanhoPrincipal extends javax.swing.JFrame {

    Color fundo = new Color(214, 217, 223);
    //-----------------------------------------------------------
    int min_cobre, min_niquel, sec_cobre, sec_niquel, min_flash, sec_flash;
    int min_cobre_ajuda;
    int cont_carga_cobre = 1;
    int contador_relatorio = 0;

    private String produto;

    private boolean click = false;
    private boolean click_verd_falso = true;
    private int cont_carga = 1;
    private int qtd_molas;
    private int num_caraga = 0;
    Timer tempo_cobre;
    Timer tempo_niquel;
    Timer tempo_flash;
    Timer timer;
    Calendar calendar = Calendar.getInstance();
    SimpleDateFormat hora = new SimpleDateFormat("kk:mm:ss");
    Calendar c = Calendar.getInstance();
    int timeOfDay = c.get(Calendar.HOUR_OF_DAY);
    int minuteOfDay = c.get(Calendar.MINUTE);
    int dia = c.get(Calendar.DAY_OF_MONTH);
    int mes = c.get(Calendar.MONTH) + 1;
    int ano = c.get(Calendar.YEAR);
    //-----------------------------------------------------------
    long totalMiliSeg = System.currentTimeMillis() - 10800000;

    long totalSeg = totalMiliSeg / 1000;
    long SegAtual = totalSeg % 60;

    long totalMin = totalSeg / 60;
    long minAtual = totalMin % 60;
    long minSoma = minAtual;

    long totalHora = totalMin / 60;
    long horaAtual = totalHora % 24;

    /**
     * Creates new form BanhoPrincipal
     */
    public BanhoPrincipal() {
        //this.setExtendedState(JFrame.MAXIMIZED_BOTH);

        //this.setUndecorated(true);
        //this.setVisible(true);
        initComponents();

        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int largura = (int) screenSize.getWidth();
        int altura = (int) screenSize.getHeight();
        pack();
        this.setSize(largura - 50, altura - 50);

        this.setLocationRelativeTo(null);

        this.setSize(1300, 700);
        this.setTitle("Cotrole Banho - METAL-FLEX");

        imagem.setSize(100, 200);

        lbl_min_cobre.setBackground(Color.yellow);
        lbl_sec_cobre.setBackground(Color.yellow);
        dois_pontos_cobre.setBackground(Color.yellow);

        lbl_min_niquel.setBackground(Color.yellow);
        lbl_sec_niquel.setBackground(Color.yellow);
        dois_pontos_niquel.setBackground(Color.yellow);

        //this.setResizable(false);
        Finalizar.setEnabled(false);

        libera_aguarde.setText("Aguarde!!");
        libera_aguarde.setForeground(Color.RED);
        Lancar.setEnabled(false);

        if (minAtual > 60) {
            horaAtual += minAtual / 60;
            minAtual %= 60;
        }
        this.timer();
        for (int i = 15; i < 41; i = i + 5) {
            cmb_cobre.addItem("" + i);
        }
        for (int i = 5; i < 31; i = i + 5) {

            if (i < 10) {
                cmb_niquel.addItem("0" + i);
            } else {
                cmb_niquel.addItem("" + i);
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Iniciar = new javax.swing.JButton();
        quantidade = new javax.swing.JTextField();
        visor = new javax.swing.JLabel();
        Lancar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        horaReal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmb_cobre = new javax.swing.JComboBox<>();
        cmb_niquel = new javax.swing.JComboBox<>();
        startManha = new javax.swing.JLabel();
        startManha1 = new javax.swing.JLabel();
        startTarde = new javax.swing.JLabel();
        startManha3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dois_pontos_flash = new javax.swing.JLabel();
        lbl_sec_flash = new javax.swing.JLabel();
        lbl_min_flash = new javax.swing.JLabel();
        entrada1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbl_carga1 = new javax.swing.JLabel();
        lbl_carga2 = new javax.swing.JLabel();
        libera_aguarde = new javax.swing.JLabel();
        Finalizar = new javax.swing.JButton();
        entrada2 = new javax.swing.JLabel();
        imagem = new javax.swing.JLabel();
        Produtos = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        painel_tempo_cobre = new javax.swing.JPanel();
        lbl_min_cobre = new javax.swing.JLabel();
        lbl_sec_cobre = new javax.swing.JLabel();
        dois_pontos_cobre = new javax.swing.JLabel();
        painel_tempo_niquel = new javax.swing.JPanel();
        dois_pontos_niquel = new javax.swing.JLabel();
        lbl_sec_niquel = new javax.swing.JLabel();
        lbl_min_niquel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Iniciar.setBackground(new java.awt.Color(0, 0, 0));
        Iniciar.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Iniciar.setForeground(new java.awt.Color(255, 255, 255));
        Iniciar.setText("Iniciar");
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });

        quantidade.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        quantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantidadeActionPerformed(evt);
            }
        });

        visor.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        visor.setForeground(new java.awt.Color(255, 0, 0));
        visor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        Lancar.setBackground(new java.awt.Color(0, 0, 0));
        Lancar.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        Lancar.setForeground(new java.awt.Color(240, 240, 240));
        Lancar.setText("Lançar");
        Lancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LancarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Numero de peças:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("COBRE");
        jLabel3.setToolTipText("");
        jLabel3.setPreferredSize(getSize());

        horaReal.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        horaReal.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                horaRealComponentAdded(evt);
            }
        });
        horaReal.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                horaRealComponentShown(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 255, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setText("Produtos");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Cobre");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Niquel");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 153, 0));
        jLabel7.setText("FLASH");

        cmb_cobre.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        cmb_cobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_cobreActionPerformed(evt);
            }
        });

        cmb_niquel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        cmb_niquel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_niquelActionPerformed(evt);
            }
        });

        startManha.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startManha.setText("-------");

        startManha1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startManha1.setText("Manhã:");

        startTarde.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startTarde.setText("--------");

        startManha3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        startManha3.setText("Tarde:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 0, 204));
        jLabel8.setText("NIQUEL");

        dois_pontos_flash.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        dois_pontos_flash.setText(":");

        lbl_sec_flash.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lbl_sec_flash.setText("00");

        lbl_min_flash.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lbl_min_flash.setText("00");

        entrada1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        entrada1.setText("-");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel10.setText("Horario Lançado:");

        lbl_carga1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_carga1.setText("Carga:");

        lbl_carga2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_carga2.setText("Carga:");

        libera_aguarde.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        libera_aguarde.setText("Status");
        libera_aguarde.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Finalizar.setBackground(new java.awt.Color(0, 0, 0));
        Finalizar.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Finalizar.setForeground(new java.awt.Color(255, 255, 255));
        Finalizar.setText("Finalizar");
        Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarActionPerformed(evt);
            }
        });

        entrada2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        entrada2.setForeground(new java.awt.Color(255, 0, 0));
        entrada2.setText("Aguardando Lançamento!!");

        imagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone/FUNDO1.png"))); // NOI18N
        imagem.setPreferredSize(new java.awt.Dimension(300, 327));

        Produtos.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Produtos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Molas", "Ponteiras", "Ganchinhos", "Diversos" }));
        Produtos.setToolTipText("");
        Produtos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProdutosActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel9.setText("Tempo De Trabalho ");

        lbl_min_cobre.setBackground(new java.awt.Color(255, 255, 0));
        lbl_min_cobre.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lbl_min_cobre.setText("00");

        lbl_sec_cobre.setBackground(new java.awt.Color(255, 255, 0));
        lbl_sec_cobre.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lbl_sec_cobre.setText("00");

        dois_pontos_cobre.setBackground(new java.awt.Color(255, 255, 0));
        dois_pontos_cobre.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        dois_pontos_cobre.setText(":");

        javax.swing.GroupLayout painel_tempo_cobreLayout = new javax.swing.GroupLayout(painel_tempo_cobre);
        painel_tempo_cobre.setLayout(painel_tempo_cobreLayout);
        painel_tempo_cobreLayout.setHorizontalGroup(
            painel_tempo_cobreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painel_tempo_cobreLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_min_cobre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dois_pontos_cobre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_sec_cobre)
                .addGap(35, 35, 35))
        );
        painel_tempo_cobreLayout.setVerticalGroup(
            painel_tempo_cobreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_tempo_cobreLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(painel_tempo_cobreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_min_cobre)
                    .addComponent(dois_pontos_cobre)
                    .addComponent(lbl_sec_cobre)))
        );

        dois_pontos_niquel.setBackground(new java.awt.Color(255, 255, 0));
        dois_pontos_niquel.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        dois_pontos_niquel.setText(":");

        lbl_sec_niquel.setBackground(new java.awt.Color(255, 255, 0));
        lbl_sec_niquel.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lbl_sec_niquel.setText("00");

        lbl_min_niquel.setBackground(new java.awt.Color(255, 255, 0));
        lbl_min_niquel.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        lbl_min_niquel.setText("00");

        javax.swing.GroupLayout painel_tempo_niquelLayout = new javax.swing.GroupLayout(painel_tempo_niquel);
        painel_tempo_niquel.setLayout(painel_tempo_niquelLayout);
        painel_tempo_niquelLayout.setHorizontalGroup(
            painel_tempo_niquelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_tempo_niquelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_min_niquel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dois_pontos_niquel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_sec_niquel))
        );
        painel_tempo_niquelLayout.setVerticalGroup(
            painel_tempo_niquelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painel_tempo_niquelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(painel_tempo_niquelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_min_niquel)
                    .addComponent(dois_pontos_niquel)
                    .addComponent(lbl_sec_niquel)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_carga1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_carga2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 235, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Lancar, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(libera_aguarde, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(166, 166, 166))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(entrada1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(109, 109, 109))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(painel_tempo_cobre, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(76, 76, 76)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel8)
                                                    .addComponent(painel_tempo_niquel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lbl_min_flash)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dois_pontos_flash)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(lbl_sec_flash, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(116, 116, 116)
                                        .addComponent(entrada2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(Finalizar))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(startManha3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(startTarde))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(startManha1)
                                            .addGap(3, 3, 3)
                                            .addComponent(startManha)
                                            .addGap(7, 7, 7)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(30, 30, 30)
                                        .addComponent(visor, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmb_cobre, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(106, 106, 106)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmb_niquel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23))
                            .addComponent(imagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(horaReal, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Produtos, 0, 0, Short.MAX_VALUE))
                        .addGap(167, 167, 167))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_min_flash)
                        .addComponent(dois_pontos_flash)
                        .addComponent(lbl_sec_flash))
                    .addComponent(painel_tempo_cobre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(painel_tempo_niquel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Iniciar)
                    .addComponent(Finalizar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startManha)
                    .addComponent(startManha1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startTarde)
                    .addComponent(startManha3))
                .addGap(42, 42, 42)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_carga1)
                    .addComponent(entrada2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_carga2)
                    .addComponent(entrada1))
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(visor, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(horaReal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(imagem, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(libera_aguarde, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Lancar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmb_cobre, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmb_niquel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Produtos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // TIMER DO RELOGIO CANTO SUPERIOR

    private void timer() {
        timer = new Timer(1000, (ActionEvent e) -> {
            calendar.setTimeInMillis(calendar.getTimeInMillis() + 1000);
            horaReal.setText(hora.format(calendar.getTime()));
        });
        timer.start();
    }

    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        // TODO add your handling code here:
        Calendar tempo = Calendar.getInstance();
        timeOfDay = tempo.get(Calendar.HOUR_OF_DAY);
        minuteOfDay = tempo.get(Calendar.MINUTE);
        if (timeOfDay < 12) {
            startManha.setText(hora.format(calendar.getTime()));
            System.out.println("1. " + timeOfDay + ":" + minuteOfDay);
        } else if (timeOfDay >= 12 && timeOfDay < 0) {
            startManha.setText(hora.format(calendar.getTime()));
            System.out.println("2. " + timeOfDay + ":" + minuteOfDay);
        } else {
            startTarde.setText(hora.format(calendar.getTime()));
            System.out.println("3. " + timeOfDay + ":" + minuteOfDay);
        }
        //------RELATORIO-----------
        System.out.println(mes);
        try {
            //D:\\CONTROLE METAL 2018\\relatorios\\relatorio.txt
            //C:\\Users\\gilberto\\Desktop\\Matheus\\relatorios\\relatorio.txt
            FileWriter f1 = new FileWriter("D:\\CONTROLE METAL 2018\\relatorios\\relatorio.txt", true);
            PrintWriter p1 = new PrintWriter(f1);
            p1.println("Iniciar: " + "  ------" + dia + "/" + mes + "/" + ano + "-----------" + hora.format(calendar.getTime()) + "-------------");

            f1.close();

        } catch (Exception e) {
            System.out.println("ERRO");
        }

        System.out.println(click);
        Finalizar.setEnabled(true);
        click_verd_falso = false;
        if (click_verd_falso == false) {
            Iniciar.setEnabled(false);
        }

        /*minAtual = minAtual + min_cobre_ajuda;
        if(minAtual>=60){
            horaAtual += minAtual / 60;
            minAtual %= 60;
            if(minAtual<10)
                sistemaEnt1.setText(""+(horaAtual+1)+":"+"0"+minAtual);
            else
                sistemaEnt1.setText(""+(horaAtual+1)+":"+minAtual);
        
        } 
        else
            if(minAtual<10)
                sistemaEnt1.setText(""+(horaAtual+1)+":"+"0"+minAtual);
            else
                sistemaEnt1.setText(""+(horaAtual+1)+":"+minAtual);
        
         */
        //TIMER COBRE
        tempo_cobre = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (min_cobre <= 0) {
                    painel_tempo_cobre.setBackground(Color.yellow);
                    painel_tempo_cobre.setOpaque(true);
                } else {
                    painel_tempo_cobre.setBackground(Color.LIGHT_GRAY);
                    painel_tempo_cobre.setOpaque(false);
                }
                if (min_cobre == 0 && sec_cobre > 57 && sec_cobre < 59) {
                    click = true;

                }
                if (min_cobre == 0 && sec_cobre <= 1) {
                    lbl_min_cobre.setForeground(fundo);
                    lbl_sec_cobre.setForeground(fundo);
                    dois_pontos_cobre.setForeground(fundo);
                }

                if (min_cobre >= 0 && click == true) {
                    libera_aguarde.setText("Liberado");
                    libera_aguarde.setForeground(Color.BLUE);
                    Lancar.setEnabled(true);
                } else {
                    libera_aguarde.setText("Aguarde!!");
                    libera_aguarde.setForeground(Color.RED);
                    Lancar.setEnabled(false);
                }

                if (sec_cobre == 0) {
                    sec_cobre = 60;
                    min_cobre--;

                }

                if (min_cobre < 0) {
                    tempo_cobre.stop();
                    lbl_min_cobre.setText((String) cmb_cobre.getSelectedItem());
                    min_cobre = Integer.parseInt(lbl_min_cobre.getText());
                    lbl_min_niquel.setText((String) cmb_niquel.getSelectedItem());
                    min_niquel = Integer.parseInt(lbl_min_niquel.getText());
                    sec_cobre = 0;
                    tempo_cobre.start();
                    cont_carga++;
                    //System.out.println(cont_carga);

                    tempo_niquel = new Timer(1000, new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            if (min_niquel <= 0) {
                                painel_tempo_niquel.setBackground(Color.yellow);
                                painel_tempo_niquel.setOpaque(true);
                            } else {
                                painel_tempo_niquel.setBackground(Color.LIGHT_GRAY);
                                painel_tempo_niquel.setOpaque(false);
                            }
                            if (sec_niquel == 0) {
                                sec_niquel = 60;
                                min_niquel--;
                            }
                            if (min_niquel < 0) {
                                lbl_min_niquel.setText((String) cmb_niquel.getSelectedItem());
                                min_niquel = Integer.parseInt(lbl_min_niquel.getText());
                                min_flash = min_niquel / 2;
                                min_niquel = 0;
                                sec_niquel = 0;
                                tempo_niquel.stop();
                                painel_tempo_niquel.setBackground(Color.LIGHT_GRAY);
                                painel_tempo_niquel.setOpaque(false);
                                lbl_min_niquel.setText("00");

                                //System.out.println(min_flash);
                                tempo_flash = new Timer(1000, new ActionListener() {
                                    @Override
                                    public void actionPerformed(ActionEvent e) {
                                        if (sec_flash == 0) {
                                            sec_flash = 60;
                                            min_flash--;
                                        }
                                        if (min_flash < 0) {

                                            min_flash = Integer.parseInt(lbl_min_niquel.getText()) / 2;
                                            sec_flash = 0;
                                            tempo_flash.stop();
                                        } else {

                                            sec_flash--;
                                            if (sec_flash < 10) {

                                                lbl_sec_flash.setText("0" + sec_flash);

                                            } else {
                                                if (min_flash < 10) {
                                                    lbl_min_flash.setText("0" + min_flash);
                                                    lbl_sec_flash.setText("" + sec_flash);
                                                } else {
                                                    lbl_min_flash.setText("" + min_flash);
                                                    lbl_sec_flash.setText("" + sec_flash);
                                                }
                                            }
                                        }
                                    }
                                });

                                tempo_flash.start();

                                //tempo_niquel.stop();
                            } else {

                                sec_niquel--;
                                if (sec_niquel < 10) {

                                    lbl_sec_niquel.setText("0" + sec_niquel);

                                } else {
                                    if (min_niquel < 10) {
                                        lbl_min_niquel.setText("0" + min_niquel);
                                        lbl_sec_niquel.setText("" + sec_niquel);
                                    } else {

                                        lbl_min_niquel.setText("" + min_niquel);
                                        lbl_sec_niquel.setText("" + sec_niquel);
                                    }
                                }
                            }
                        }
                    });
                    tempo_niquel.start();

                } else {

                    sec_cobre--;
                    if (sec_cobre < 10) {

                        lbl_sec_cobre.setText("0" + sec_cobre);

                    } else {
                        if (min_cobre < 10) {
                            lbl_min_cobre.setText("0" + min_cobre);
                            lbl_sec_cobre.setText("" + sec_cobre);
                        } else {
                            lbl_min_cobre.setText("" + min_cobre);
                            lbl_sec_cobre.setText("" + sec_cobre);
                        }
                    }
                }
            }
        });
        tempo_cobre.start();


    }//GEN-LAST:event_IniciarActionPerformed

    private void quantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantidadeActionPerformed

    private void LancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LancarActionPerformed
        // TODO add your handling code here:
        contador_relatorio++;
        try {
            FileWriter f1 = new FileWriter("C:\\Users\\gilberto\\Desktop\\Matheus\\relatorios\\relatorio.txt", true);
            PrintWriter p1 = new PrintWriter(f1);
            p1.println(contador_relatorio + " - " + hora.format(calendar.getTime()) + " " + quantidade.getText() + " " + Produtos.getSelectedItem());

            f1.close();

        } catch (Exception e) {
            System.out.println("ERRO");
        }

        click = false;
        System.out.println(click);
        //sistemaEnt2.setText(""+sistemaEnt1.getText());

        lbl_carga2.setText("Carga: " + cont_carga_cobre);
        cont_carga_cobre++;
        lbl_carga1.setText("Carga: " + cont_carga_cobre);

        qtd_molas = qtd_molas + Integer.parseInt(quantidade.getText());
        visor.setText(qtd_molas + "");
        num_caraga++;

        //ENTRADAS
        entrada1.setText(quantidade.getText() + " as " + (hora.format(calendar.getTime())));

        // ENTRADA COMPUTADOR
        /*
        minAtual = minAtual + min_cobre_ajuda;
        if(minAtual>=60){
            horaAtual += minAtual / 60;
            minAtual %= 60;
            if(minAtual<10)
                sistemaEnt1.setText(""+(horaAtual+1)+":"+"0"+minAtual);
            else
                sistemaEnt1.setText(""+(horaAtual+1)+":"+minAtual);
        
        } 
        else
            if(minAtual<10)
                sistemaEnt1.setText(""+(horaAtual+1)+":"+"0"+minAtual);
            else
                sistemaEnt1.setText(""+(horaAtual+1)+":"+minAtual);
                                       
        
         */
        //VOLTA A COR DO TEMPO COBRE PARA PRETO
        lbl_min_cobre.setForeground(Color.BLACK);
        lbl_sec_cobre.setForeground(Color.BLACK);
        dois_pontos_cobre.setForeground(Color.BLACK);
    }//GEN-LAST:event_LancarActionPerformed

    private void horaRealComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_horaRealComponentAdded
        // TODO add your handling code here:


    }//GEN-LAST:event_horaRealComponentAdded

    private void horaRealComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_horaRealComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_horaRealComponentShown

    private void cmb_cobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_cobreActionPerformed
        // TODO add your handling code here:
        min_cobre_ajuda = Integer.parseInt((String) cmb_cobre.getSelectedItem());
        lbl_min_cobre.setText((String) cmb_cobre.getSelectedItem());
        min_cobre = Integer.parseInt(lbl_min_cobre.getText());


    }//GEN-LAST:event_cmb_cobreActionPerformed

    private void cmb_niquelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_niquelActionPerformed
        // TODO add your handling code here:
        lbl_min_niquel.setText((String) cmb_niquel.getSelectedItem());
        min_niquel = Integer.parseInt(lbl_min_niquel.getText());

        min_flash = Integer.parseInt(lbl_min_niquel.getText()) / 2;
    }//GEN-LAST:event_cmb_niquelActionPerformed

    private void FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarActionPerformed
        // TODO add your handling code here]
        int resposta = 0;
        resposta = JOptionPane.showConfirmDialog(null, "Tem certeza em Finalizar?");
        System.out.println(resposta);
        if (resposta == 0) {

            try {
                FileWriter f1 = new FileWriter("C:\\Users\\gilberto\\Desktop\\Matheus\\relatorios\\relatorio.txt", true);
                PrintWriter p1 = new PrintWriter(f1);
                p1.println("Finalizar: " + "------" + dia + "/" + mes + "/" + ano + "-----------" + hora.format(calendar.getTime()) + "-------------");
                p1.println("");

                f1.close();

            } catch (Exception e) {
                System.out.println("ERRO");
            }

            //Deixar Botão Finalizar falso
            Iniciar.setEnabled(true);
            click_verd_falso = true;
            if (click_verd_falso == true) {
                Finalizar.setEnabled(false);
            }

            libera_aguarde.setText("Aguarde!!");
            libera_aguarde.setForeground(Color.red);
            click = false;
            Lancar.setEnabled(false);
            //---------COBRE--------
            lbl_min_cobre.setText((String) cmb_cobre.getSelectedItem());
            lbl_sec_cobre.setText("00");
            min_cobre = Integer.parseInt((String) cmb_cobre.getSelectedItem());
            sec_cobre = 0;
            //-------NIQUEL--------

            lbl_min_niquel.setText((String) cmb_niquel.getSelectedItem());
            lbl_sec_niquel.setText("00");
            min_niquel = Integer.parseInt((String) cmb_niquel.getSelectedItem());
            sec_niquel = 0;

            //-------FLASH------
            lbl_min_flash.setText("00");
            lbl_sec_flash.setText("00");
            min_flash = Integer.parseInt(lbl_min_niquel.getText()) / 2;
            sec_flash = 0;

            tempo_cobre.stop();
            tempo_niquel.stop();
            tempo_flash.stop();

            //-----Relatorio------
            //VOLTA A COR DO TEMPO COBRE PARA PRETO
            lbl_min_cobre.setForeground(Color.BLACK);
            lbl_sec_cobre.setForeground(Color.BLACK);
            dois_pontos_cobre.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_FinalizarActionPerformed

    private void ProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProdutosActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ProdutosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanhoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanhoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanhoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanhoPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BanhoPrincipal().setVisible(true);

            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Finalizar;
    private javax.swing.JButton Iniciar;
    private javax.swing.JButton Lancar;
    private javax.swing.JComboBox<String> Produtos;
    private javax.swing.JComboBox<String> cmb_cobre;
    private javax.swing.JComboBox<String> cmb_niquel;
    private javax.swing.JLabel dois_pontos_cobre;
    private javax.swing.JLabel dois_pontos_flash;
    private javax.swing.JLabel dois_pontos_niquel;
    private javax.swing.JLabel entrada1;
    private javax.swing.JLabel entrada2;
    private javax.swing.JLabel horaReal;
    private javax.swing.JLabel imagem;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbl_carga1;
    private javax.swing.JLabel lbl_carga2;
    private javax.swing.JLabel lbl_min_cobre;
    private javax.swing.JLabel lbl_min_flash;
    private javax.swing.JLabel lbl_min_niquel;
    private javax.swing.JLabel lbl_sec_cobre;
    private javax.swing.JLabel lbl_sec_flash;
    private javax.swing.JLabel lbl_sec_niquel;
    private javax.swing.JLabel libera_aguarde;
    private javax.swing.JPanel painel_tempo_cobre;
    private javax.swing.JPanel painel_tempo_niquel;
    private javax.swing.JTextField quantidade;
    private javax.swing.JLabel startManha;
    private javax.swing.JLabel startManha1;
    private javax.swing.JLabel startManha3;
    private javax.swing.JLabel startTarde;
    private javax.swing.JLabel visor;
    // End of variables declaration//GEN-END:variables
}
